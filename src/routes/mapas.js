const { uploadImage } = require('../middlewares/fileUpload');
const { idValidation, validate } = require('../middlewares/validator/generalValidator');
const { mapaValidationRules } = require('../middlewares/validator/mapaValidator');
const { DESTINATIONS } = require('../services/fileService');
const express = require('express');
const { updateMapa } = require('../controllers/mapaController');
const { exists } = require('../middlewares/resourceExists');
const { verifyJWT, verifyUserIsActive, verifyUserHasRoles } = require('../middlewares/auth');
const router = express.Router();


/**
 * @swagger
 *   components:
 *     schemas:
 *       Mapa:
 *         type: object
 *         properties:
 *           id:    
 *             type: integer
 *             description: Autogenerated id.
 *             readOnly: true
 *           ubicacion:
 *             type: string
 *             description: Location (local file).
 *           url:
 *             type: string
 *             description: Link to the mapa dashboard.
 *             example: 'http://example.com/mapa-dashboard'
 *           urlImagen:   
 *             type: string
 *             format: binary
 *             description: URL of the representative image for a mapa.
 */

/**
 * @swagger
 *   /mapas/{idMapa}:
 *     put:
 *       summary: Update values of a mapa
 *       tags: [Mapas]
 *       security:
 *         - bearer: []
 *       parameters:
 *         - in: path
 *           name: idMapa
 *           required: true
 *           schema:
 *             type: integer
 *             format: int64  
 *       requestBody:
 *         content:
 *           multipart/form-data:
 *             schema:
 *               $ref: '#/components/schemas/Mapa'
 *       responses:
 *         204:
 *           description: Mapa updated successfully
 *         401:
 *           $ref: '#/components/responses/Unauthorized'
 *         403:
 *           $ref: '#/components/responses/Forbidden'
 *         422:
 *           $ref: '#components/responses/UnprocessableEntity'
 *         429:
 *           $ref: '#components/responses/TooManyRequests'
 *         500:
 *           $ref: '#components/responses/InternalServerError'
 */
router.route('/:idMapa')
  .put(
    verifyJWT,
    verifyUserIsActive,
    verifyUserHasRoles(['USER', 'ADMIN']),
    idValidation(),
    uploadImage(DESTINATIONS.MAPAS),
    mapaValidationRules(),
    validate,
    exists('idMapa', 'Mapa'),
    updateMapa
);


module.exports = router;